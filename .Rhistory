dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
filter(beforeCOMPAS==1)%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
prison_visits=n_distinct(prison_in_custody),
prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
jail_visits=n_distinct(jail_in_custody),
jail_time=sum(distinct(jail_out_custody-jail_in_custody))
#    jailandprison_visits=prison_visits+jail_visits,
#    jailandprison_time=prison_time+jail_time
)
dynamic1=dynamic1%>%
mutate(jailandprison_visits=prison_visits+jail_visits)%>%
mutate(jailandprison_time=prison_time+jail_time)
dynamic1
#Q: is checking #prison_in_custody enough to determine prison visits?
#Q: prison_time/jail_time: what if they were in jail 2x the exact same amount of time?
#checking for juvenile felonies
dynamic2=dfnew%>%
distinct(person_id,offense_date,screening_date,charge_degree)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
filter(beforeCOMPAS==1)%>%
filter(date_charge_filed-screening_date<=5)%>%
group_by(person_id) %>%
summarize(yrs5_felcount_person = sum(is_felony)
)
dynamic2
#checking for juvenile felonies
dynamic2=dfnew%>%
distinct(person_id,offense_date,screening_date,charge_degree,date_charge_filed)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
filter(beforeCOMPAS==1)%>%
filter(date_charge_filed-screening_date<=5)%>%
group_by(person_id) %>%
summarize(yrs5_felcount_person = sum(is_felony)
)
dynamic2
#checking for number of felonies that occurred at most 5 yrs before the screening date
dynamic2=dfnew%>%
distinct(person_id,offense_date,screening_date,charge_degree,date_charge_filed)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
filter(beforeCOMPAS==1)%>%
filter(screening_date-date_charge_filed<=5)%>%
group_by(person_id) %>%
summarize(yrs5_felcount_person = sum(is_felony)
)
dynamic2
library(stringr)
library(tidyverse)
#includes core: ggplot2,dplyr,tidyr,readr,purrr,tibble
library(magrittr)
# Connect to the database
db <- src_sqlite("compas-analysis/compas.db", create = TRUE)
# List all the tables
table_names <- src_tbls(db)
table_names
casearrest_df <- tbl(db,"casearrest")
charge_df <- tbl(db,"charge")
compas_df <- tbl(db,"compas")
jailhistory_df <-tbl(db,"jailhistory")
prisonhistory_df <-tbl(db,"prisonhistory")
people_df<-tbl(db,"people")
dfnew=select(compas_df,id,person_id, first, last, marital_status, screening_date,scale_id, type_of_assessment, raw_score, decile_score)
dfnew=rename(dfnew, person_score_id=id)
#View(dfnew)
peoplenew=select(people_df,id, name,sex, race, dob, age, c_case_number)
peoplenew=rename(peoplenew,person_id=id)
dfnew=left_join(dfnew, peoplenew, by="person_id")
#casearrestnew=select(casearrest_df,person_id, case_number, arrest_id, arrest_date, #charge_degree)
#dfnew=left_join(dfnew, casearrestnew, by="person_id")
jailhistorynew=select(jailhistory_df,person_id, in_custody, out_custody)
jailhistorynew=rename(jailhistorynew,jail_in_custody=in_custody, jail_out_custody=out_custody)
dfnew=left_join(dfnew, jailhistorynew, by="person_id")
chargenew=select(charge_df,person_id, case_type, case_number, offense_date, charge_number, charge_degree, charge, date_charge_filed, filing_type, filing_agency, statute)
dfnew=left_join(dfnew, chargenew, by="person_id")
prisonhistorynew=select(prisonhistory_df,person_id, in_custody, out_custody)
prisonhistorynew=rename(prisonhistorynew,prison_in_custody=in_custody, prison_out_custody=out_custody)
dfnew=left_join(dfnew, prisonhistorynew, by="person_id")
#marital status: single and married
mar=as_data_frame(distinct(select(dfnew, marital_status)))
sex=as_data_frame(distinct(select(dfnew, sex)))
race=as_data_frame(distinct(select(dfnew, race)))
charge_deg=as_data_frame(distinct(select(dfnew, charge_degree)))
charge=as_data_frame(distinct(select(dfnew, charge)))
#use levels(dataset$column) to check what the vectors are
#should write a function for this later
#should go through person by person using a while true loop
features=as_data_frame(distinct(select(dfnew, person_id, first,last,age,sex,marital_status,race)))
features$sex=factor(features$sex, levels=c("Male", "Female"), labels=c(1,2))
features$sex=as.numeric(as.character(features$sex))
features$marital_status=factor(features$marital_status, levels=c("Single", "Married", "Separated","Significant Other","Widowed","Divorced","Unknown"), labels=c(1,2,3,4,5,6,7))
features$marital_status=as.numeric(as.character(features$marital_status))
features$race=factor(features$race, levels=c("Caucasian", "African-American","Hispanic","Asian","Native American","Other"), labels=c(1,2,3,4,5,6))
features$race=as.numeric(as.character(features$race))
features
dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
mutate(fel5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
filter(beforeCOMPAS==1)%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
fel_count_5yrs=sum(fel5yrs),
prison_visits=n_distinct(prison_in_custody),
prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
jail_visits=n_distinct(jail_in_custody),
jail_time=sum(distinct(jail_out_custody-jail_in_custody))
)
dynamic1=dynamic1%>%
mutate(jailandprison_visits=prison_visits+jail_visits)%>%
mutate(jailandprison_time=prison_time+jail_time)
dynamic1
dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
filter(beforeCOMPAS==1)%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
mutate(fel5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
fel_count_5yrs=sum(fel5yrs),
prison_visits=n_distinct(prison_in_custody),
prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
jail_visits=n_distinct(jail_in_custody),
jail_time=sum(distinct(jail_out_custody-jail_in_custody))
)
dynamic1=dynamic1%>%
mutate(jailandprison_visits=prison_visits+jail_visits)%>%
mutate(jailandprison_time=prison_time+jail_time)
dynamic1
dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
filter(beforeCOMPAS==1)%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
mutate(fel5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
fel_count_5yrs=sum(fel5yrs),
prison_visits=n_distinct(prison_in_custody),
prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
jail_visits=n_distinct(jail_in_custody),
jail_time=sum(distinct(jail_out_custody-jail_in_custody))
)
dynamic1=dynamic1%>%
mutate(jailandprison_visits=prison_visits+jail_visits)%>%
mutate(jailandprison_time=prison_time+jail_time)
#Q: is checking #prison_in_custody enough to determine prison visits?
#Q: prison_time/jail_time: what if they were in jail 2x the exact same amount of time?
View(dynamic1)
dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
filter(beforeCOMPAS==1)%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
#      mutate(fel5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
#                    fel_count_5yrs=sum(fel5yrs),
prison_visits=n_distinct(prison_in_custody),
prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
jail_visits=n_distinct(jail_in_custody),
jail_time=sum(distinct(jail_out_custody-jail_in_custody))
)
dynamic1=dynamic1%>%
mutate(jailandprison_visits=prison_visits+jail_visits)%>%
mutate(jailandprison_time=prison_time+jail_time)
#Q: is checking #prison_in_custody enough to determine prison visits?
#Q: prison_time/jail_time: what if they were in jail 2x the exact same amount of time?
View(dynamic1)
dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
filter(beforeCOMPAS==1)%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
#      mutate(fel5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
#                    fel_count_5yrs=sum(fel5yrs),
prison_visits=n_distinct(prison_in_custody),
prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
jail_visits=n_distinct(jail_in_custody),
jail_time=sum(distinct(jail_out_custody-jail_in_custody))
)
dynamic1=dynamic1%>%
mutate(jailandprison_visits=prison_visits+jail_visits)%>%
mutate(jailandprison_time=prison_time+jail_time)
dynamic1
#Q: is checking #prison_in_custody enough to determine prison visits?
#Q: prison_time/jail_time: what if they were in jail 2x the exact same amount of time?
dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
filter(beforeCOMPAS==1)%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
mutate(fel5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
fel_count_5yrs=sum(fel5yrs),
#                    prison_visits=n_distinct(prison_in_custody),
#                   prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
#                  jail_visits=n_distinct(jail_in_custody),
#                 jail_time=sum(distinct(jail_out_custody-jail_in_custody))
)
#dynamic1=dynamic1%>%
#        mutate(jailandprison_visits=prison_visits+jail_visits)%>%
#       mutate(jailandprison_time=prison_time+jail_time)
dynamic1
dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,date_charge_filed,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
filter(beforeCOMPAS==1)%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
mutate(fel5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
fel_count_5yrs=sum(fel5yrs),
#                    prison_visits=n_distinct(prison_in_custody),
#                   prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
#                  jail_visits=n_distinct(jail_in_custody),
#                 jail_time=sum(distinct(jail_out_custody-jail_in_custody))
)
#dynamic1=dynamic1%>%
#        mutate(jailandprison_visits=prison_visits+jail_visits)%>%
#       mutate(jailandprison_time=prison_time+jail_time)
dynamic1
#Q: is checking #prison_in_custody enough to determine prison visits?
#Q: prison_time/jail_time: what if they were in jail 2x the exact same amount of time?
#idea: 1) Filter by statute number
#      2)include date in summarize table to get 5 yr drug offense
dynamic3=dfnew%>%
distinct(person_id,offense_date,screening_date,date_charge_filed,statute)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
mutate(is_drug= if_else(substr(statute,1,3)=="893",1,0)) %>%
filter(beforeCOMPAS==1)%>%
filter(is_drug==1)%>%
mutate(is_drug_5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(drug_count_person = sum(is_drug),
drug_count_5yrs=sum(is_drug_5yrs)
)
dynamic3
dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,date_charge_filed,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
filter(beforeCOMPAS==1)%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
#           mutate(fel5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
filter(is_felony==1)%>%
mutate(is_fel_5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
fel_count_5yrs=sum(is_fel_5yrs),
prison_visits=n_distinct(prison_in_custody),
prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
jail_visits=n_distinct(jail_in_custody),
jail_time=sum(distinct(jail_out_custody-jail_in_custody))
)
dynamic1=dynamic1%>%
mutate(jailandprison_visits=prison_visits+jail_visits)%>%
mutate(jailandprison_time=prison_time+jail_time)
dynamic1
dynamic4=dfnew%>%
distinct(person_id,offense_date,screening_date,date_charge_filed)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
mutate(is_misdem= if_else(substr(statute,2,2)=="M",1,0)) %>%
filter(beforeCOMPAS==1)%>%
filter(is_misdem=1)%>%
mutate(is_misdem_5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(misdem_count_person = sum(is_misdem),
misdem_count_5yrs=sum(is_misdem_5yrs)
)
dynamic4
dynamic4=dfnew%>%
distinct(person_id,offense_date,screening_date,date_charge_filed,charge_degree)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
mutate(is_misdem= if_else(substr(charge_degree,2,2)=="M",1,0)) %>%
filter(beforeCOMPAS==1)%>%
filter(is_misdem=1)%>%
mutate(is_misdem_5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(misdem_count_person = sum(is_misdem),
misdem_count_5yrs=sum(is_misdem_5yrs)
)
dynamic4
dynamic4=dfnew%>%
distinct(person_id,offense_date,screening_date,date_charge_filed,charge_degree)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
mutate(is_misdem= if_else(substr(charge_degree,2,2)=="M",1,0)) %>%
filter(beforeCOMPAS==1)%>%
filter(is_misdem==1)%>%
mutate(is_misdem_5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(misdem_count_person = sum(is_misdem),
misdem_count_5yrs=sum(is_misdem_5yrs)
)
dynamic4
dynamic1=dfnew %>%
distinct(person_id,offense_date,screening_date,date_charge_filed,charge_degree,prison_in_custody,prison_out_custody,jail_in_custody,jail_out_custody)%>%
mutate(beforeCOMPAS=if_else(offense_date<=screening_date,1,0))%>%
filter(beforeCOMPAS==1)%>%
mutate(is_felony = if_else(substr(charge_degree,2,2)=="F",1,0)) %>%
filter(is_felony==1)%>%
#           mutate(is_fel_5yrs=if_else(screening_date-date_charge_filed<=5,1,0))%>%
group_by(person_id) %>%
summarize(felony_count_person = sum(is_felony),
#                         fel_count_5yrs=sum(is_fel_5yrs),
prison_visits=n_distinct(prison_in_custody),
prison_time=sum(distinct(prison_out_custody-prison_in_custody)),
jail_visits=n_distinct(jail_in_custody),
jail_time=sum(distinct(jail_out_custody-jail_in_custody))
)
dynamic1=dynamic1%>%
mutate(jailandprison_visits=prison_visits+jail_visits)%>%
mutate(jailandprison_time=prison_time+jail_time)
dynamic1
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/broward-data-query")
mt_cars
mtcarsf
mtcars
library(stringr)
library(tidyverse)
map_dbl(mtcars,mean)
map_df(mtcars,mean)
library(stringr)
library(tidyverse)
# Connect to the database
db <- src_sqlite("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/crim-recid-code/compas-analysis/compas.db", create = TRUE)
# List all the tables
table_names <- src_tbls(db)
table_names
casearrest_df <- tbl(db,"casearrest")
charge_df <- tbl(db,"charge")
compas_df <- tbl(db,"compas")
jailhistory_df <-tbl(db,"jailhistory")
prisonhistory_df <-tbl(db,"prisonhistory")
people_df<-tbl(db,"people")
loopdf=select(compas_df,person_id,screening_date)
chargenew=select(charge_df,person_id,case_number)
loopdf=left_join(loopdf, chargenew, by="person_id")
#consider adding the variables, charge_number and charge
#will need charge number later so I can do dispositions
loopdf<-as_data_frame(distinct(select(person_id,case_number)))
View(df)
View(loopdf)
loopdf<-as_data_frame(distinct(select(loopdf,person_id,case_number)))
(loopdf)
write.csv(loopdf, "loopdf.csv")
loopdf<-read.csv() #EDIT THIS
loopdf<-read.csv(file="loopdf.csv") #EDIT THIS
loopdf<-read.csv(file="loopdf.csv") #EDIT THIS
sample<-slice(loopdf, 0:20)
View(sample)
sample<-slice(loopdf, 1:20)
# Load packages
library(tidyverse)
library(httr)
library(jsonlite)
library(mongolite)
loopdf<-read.csv(file="loopdf.csv") #EDIT THIS
sample<-slice(loopdf, 1:20)
pb <- progress_estimated(length(sample$case_number))
api_call<-function(casenumber,request){
pb$tick()$print()
Sys.sleep(sample(seq(0.5, 2.5, 0.5), 1)) # be kind to the free API
#  res <- GET(url = base_url, path = sprintf("api/characters/%s/detailedmoves", .x))
eventsdocs<-getJSON(.x,request)
file<-writeToSystem(eventsdocs,.x,"eventsdocs.txt")
#test with reading from file
json_fromfile<-fromJSON(txt=file)
#a list dfhybrid
json_df<-json_fromfile$EventList #a dataframe
return(json_df)
}
safe_api_call<-safely(api_call)
eventsdocs_df<-map_df(sample$case_number, safe_api_call(.x,"events_and_documents"), .case_number = "case_number",.person_id = "person_id")
getJSON<-function(casenumber,request_type){
url_broward<-"https://api.browardclerk.org/api/"
key<-"Lo5Mt6EEJIwDILvpusItyvDntLsLqMwuMGzrvLFDsKzDsnypquI3JD6CLKoopLxwvnypttCKEqGnGs6sF9EKFnr21qD4MJFnvEwovDwqtp73nzCtyEGzJrsy8K4rsD9tFEGvKp8pspEyxrGw0oxtEF2HFoD1KrHGGExttDHJCF2yz1zoDuDxnpxnuwsJo8rK7H1GspGGIxxFztDLutDyqHGDrvF3sHJsyxwzLCwDJnMCnMw3CMsHvzrLEK"
eventsdocs<-GET(url=paste0(url_broward,'case/',casenumber,'/',request_type,'.json?auth_key=',key))
#length of eventsdocs is 10, class=response
#http_type(eventsdocs) is [1] "application/json"
return(eventsdocs) #r automatically returns last line but we'll explicitly return this here
}
writeToSystem<-function(json_response,casenumber, filetype){
filename=paste(casenumber,filetype, sep="")
raw<-content(json_response,"raw")
#  invisible(writeBin(raw, filename))
writeBin(raw,filename)
return(filename)
}
loopdf<-read.csv(file="loopdf.csv") #EDIT THIS
sample<-slice(loopdf, 1:20)
pb <- progress_estimated(length(sample$case_number))
api_call<-function(casenumber,request){
pb$tick()$print()
Sys.sleep(sample(seq(0.5, 2.5, 0.5), 1)) # be kind to the free API
#  res <- GET(url = base_url, path = sprintf("api/characters/%s/detailedmoves", .x))
eventsdocs<-getJSON(.x,request)
file<-writeToSystem(eventsdocs,.x,"eventsdocs.txt")
#test with reading from file
json_fromfile<-fromJSON(txt=file)
#a list dfhybrid
json_df<-json_fromfile$EventList #a dataframe
return(json_df)
}
safe_api_call<-safely(api_call)
eventsdocs_df<-map_df(sample$case_number, safe_api_call(.x,"events_and_documents"), .case_number = "case_number",.person_id = "person_id")
class(sample$case_number)
?class
sample
sample$case_number<-as.character(sample$case_number)
sample
loopdf<-read.csv(file="loopdf.csv") #EDIT THIS
sample<-slice(loopdf, 1:20)
sample$case_number<-as.character(sample$case_number)
pb <- progress_estimated(length(sample$case_number))
api_call<-function(casenumber,request){
pb$tick()$print()
Sys.sleep(sample(seq(0.5, 2.5, 0.5), 1)) # be kind to the free API
#  res <- GET(url = base_url, path = sprintf("api/characters/%s/detailedmoves", .x))
eventsdocs<-getJSON(.x,request)
file<-writeToSystem(eventsdocs,.x,"eventsdocs.txt")
#test with reading from file
json_fromfile<-fromJSON(txt=file)
#a list dfhybrid
json_df<-json_fromfile$EventList #a dataframe
return(json_df)
}
safe_api_call<-safely(api_call)
eventsdocs_df<-map_df(sample$case_number, safe_api_call(.x,"events_and_documents"), .case_number = "case_number",.person_id = "person_id")
sample
View(sample)
loopdf<-read.csv(file="loopdf.csv") #EDIT THIS
loopdf%>%
slice(1:20)%>%
select(person_id, case_number)
sample<-loopdf
sample$case_number<-as.character(sample$case_number)
sample$person_id<-as.numeric(sample$person_id)
pb <- progress_estimated(length(sample$case_number))
api_call<-function(casenumber,request){
pb$tick()$print()
Sys.sleep(sample(seq(0.5, 2.5, 0.5), 1)) # be kind to the free API
#  res <- GET(url = base_url, path = sprintf("api/characters/%s/detailedmoves", .x))
eventsdocs<-getJSON(.x,request)
file<-writeToSystem(eventsdocs,.x,"eventsdocs.txt")
#test with reading from file
json_fromfile<-fromJSON(txt=file)
#a list dfhybrid
json_df<-json_fromfile$EventList #a dataframe
return(json_df)
}
safe_api_call<-safely(api_call)
eventsdocs_df<-map_df(sample$case_number, safe_api_call(.x,"events_and_documents"), .case_number = "case_number",.person_id = "person_id")
loopdf<-read.csv(file="loopdf.csv") #EDIT THIS
loopdf%>%
slice(1:20)%>%
select(person_id, case_number)
sample<-loopdf
sample$case_number<-as.character(sample$case_number)
sample$person_id<-as.numeric(sample$person_id)
pb <- progress_estimated(length(sample$case_number))
api_call<-function(casenumber,request){
pb$tick()$print()
Sys.sleep(sample(seq(0.5, 2.5, 0.5), 1)) # be kind to the free API
#  res <- GET(url = base_url, path = sprintf("api/characters/%s/detailedmoves", .x))
eventsdocs<-getJSON(.x,request)
file<-writeToSystem(eventsdocs,.x,"eventsdocs.txt")
#test with reading from file
json_fromfile<-fromJSON(txt=file)
#a list df hybrid
json_df<-json_fromfile$EventList #a dataframe
return(json_df)
}
safe_api_call<-safely(api_call)
eventsdocs_df<-map_df(sample$case_number, safe_api_call(.case_number,"events_and_documents"), .case_number = "case_number",.person_id = "person_id")
eventsdocs
casenum<-"16000333CF10A"
request="events_and_documents"
eventsdocs<-getJSON(casenum,request)
writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
class(eventsdocs)
type(eventsdocs)
content(eventsdocs)
http_status(eventsdocs)
casenum<-"16000333CF10A"
request="events_and_documents"
eventsdocs<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
print(eventsdocs)
pb <- progress_estimated(length(sample$case_number))
api_call<-function(casenumber,request){
pb$tick()$print()
Sys.sleep(sample(seq(0.5, 2.5, 0.5), 1)) #time delay between calls
eventsdocs<-getJSON(casenumber ,request)
file<-writeToSystem(eventsdocs,casenumber,"eventsdocs.txt")
json_fromfile<-fromJSON(txt=file)
#a list df hybrid
json_df<-json_fromfile$EventList #a dataframe
return(json_df)
}
safe_api_call<-safely(api_call)
eventsdocs_df<-map_df(sample$case_number, safe_api_call(.case_number,"events_and_documents"), .case_number = "case_number",.person_id = "person_id")
