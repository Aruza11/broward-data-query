==T,1,0)) %>%
select(person_id,EventDate,case_num,fail_appeared)
View(fail_to_appear)
#string<-eventsdescrp_df$Description[1]
#if_else(str_detect(string,coll("Withdrawn",T,ignore_case=T))==T,1,0)
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/broward-data-query/events_docs_data")
#so that writeToSystem writes to correct place
pb <- progress_estimated(length(sample$case_number))
eventsdocs_df<-map_dfr(df_as_list, ~wrapper(.x,"crim_dispositions"))
casenum<-"16000333CF10A"
request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
testdf<-api_call(casenum,request)
pb <- progress_estimated(length(1))
casenum<-"16000333CF10A"
request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
testdf<-api_call(casenum,request)
disp<-getJSON(casenum,request)
disp
content(disp)
sample_row
df_as_list
row<-slice(sample,1:1)
row
testdf<-api_call(row ,request)
pb <- progress_estimated(length(1))
#casenum<-"16000333CF10A"
request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
row<-slice(sample,1:1)
testdf<-api_call(row ,request)
row
disp<-getJSON(casenum,request)
dis
disp
content(disp)
getJSON<-function(casenumber,request_type){
url_broward<-"https://api.browardclerk.org/api/"
key<-"Lo5Mt6EEJIwDILvpusItyvDntLsLqMwuMGzrvLFDsKzDsnypquI3JD6CLKoopLxwvnypttCKEqGnGs6sF9EKFnr21qD4MJFnvEwovDwqtp73nzCtyEGzJrsy8K4rsD9tFEGvKp8pspEyxrGw0oxtEF2HFoD1KrHGGExttDHJCF2yz1zoDuDxnpxnuwsJo8rK7H1GspGGIxxFztDLutDyqHGDrvF3sHJsyxwzLCwDJnMCnMw3CMsHvzrLEK"
url=paste0(url_broward,'case/',casenumber,'/',request_type,'.json?auth_key=',key)
print(url)
eventsdocs<-RETRY("GET", url,times=5)
#retries until http_error (boolean) returns false; true if status code is 400+
#retries max of 5x; 1 sec pauses between tries
return(eventsdocs) #r automatically returns last line but we'll explicitly return this here
}
pb <- progress_estimated(length(1))
casenum<-"09083797TI30A"
request="crim_dispositions"
disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
row<-slice(sample,1:1)
testdf<-api_call(row ,request)
content(json_string)
json_string={"Case_Number":"09083797TI30A","ChargeDispositionList":[{"Charge":"1","Offense_Date":"08/11/2009","PleaList":[{"Date":"01/08/2010","Type_Description":"Change of Plea-Nolo Contendere","Amended_Reason":"Change of Plea,"},{"Date":"09/17/2009","Type_Description":"Written Plea Not Guilty Infraction","Amended_Reason":null}],"DispositionList":[{"Date":"01/08/2010","Type_Description":null,"Amended_Reason":null}],"SentenceList":[{"Date":"01/08/2010","Type_Description":"Sentence","Judge":"Diioia - HO, Brenda","Amended_Reason":null,"ComponentList":null}]}]}
filename=writeToSystem(disp,casenum,request)
json_string<-fromJSON(txt=filename)
content(json_string)
json_df<-json_string$ChargeDispositionList
View(json_df)
View(json_df)
case_num<-json_string$Case_Number
case_num
View(case_num)
rm(case_Num)
rm(case_num)
class(json_df)
listelem<-as_data_frame(json_df$PleaList)
dispo_df<-select(json_string$ChargeDispositionLists,Charge,Offense_Date,DispositionList)
dispo_df<-select(json_df,Charge,Offense_Date,DispositionList)
View(dispo_df)
listelem <- data.frame(matrix(unlist(disps), nrow=1, byrow=T),stringsAsFactors=F)
disps<-dispo_df$DispositionList
listelem <- data.frame(matrix(unlist(disps), nrow=1, byrow=T),stringsAsFactors=F)
listelem
listelem <- data.frame(matrix(unlist(disps), nrow=,3 byrow=T),stringsAsFactors=F)
listelem <- data.frame(matrix(unlist(disps), nrow=3, byrow=T),stringsAsFactors=F)
listelem
disps
View(disps)
listolists<-select(json_df,DispositionList,PleaList,SentenceList)
class(disps)
as_data_frame(diss)
as_data_frame(disps)
as.data.frame.complex(disps)
test<-as.data.frame.complex(disps)
View(test)
listelem <- data.frame(matrix(unlist(listolists), nrow=3, byrow=T),stringsAsFactors=F)
listelem
listelem <- data.frame(matrix(unlist(listolists), nrow=14, byrow=T),stringsAsFactors=F)
View(listelem)
listelem <- data.frame(matrix(unlist(listolists), nrow=3, byrow=T),stringsAsFactors=F)
View(listelem)
View(disps)
listelem <- data.frame(matrix(unlist(disps), nrow=1, byrow=T),stringsAsFactors=F)
View(listelem)
View(do.call(rbind.data.frame, disps)
)
test<-do.call(rbind.data.frame,listolists)
listelem
View(disps)
listolists$PleaList
listolists
json_string$Case_Number
class(json_string$Case_Number)
listelem <- disps%>%
do.call(rbind.data.frame, .)%>%
mutate(case_num=json_string$Case_Number,
#person_id=,
OffenseDate=json_df$Offense_Date,
Charge=json_df$Charge)
View(listelem)
class(json_string)
json_as_df<-function(json_fromfile, request,case.number,person.id){
if (request=="events_and_documents"){
json_df<-json_fromfile%>%
use_series(EventList)%>%  #the magrittr version of $ operator
mutate(case_num=case.number, person_id=person.id)
return(json_df)
}
#else if request=="crim_dispositions"
json_df<-json_fromfile$ChargeDispositionLists
disps<-json_df$DispositionList
listelem <- disps%>%
do.call(rbind.data.frame, .)%>%
mutate(case_num=case.number,
person_id=person.id,
OffenseDate=json_df$Offense_Date,
Charge=json_df$Charge)
return (listelem)
}
loopdf<-read.csv(file="loopdf.csv")
loopdf<-select(loopdf, person_id, case_number)
sample<-slice(loopdf,1:2)
sample$case_number<-as.character(sample$case_number)
sample$person_id<-as.numeric(sample$person_id)
df_as_list<-sample%>%
split(seq(nrow(.)))%>%
lapply(as.vector)
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/broward-data-query/events_docs_data")
#so that writeToSystem writes to correct place
pb <- progress_estimated(length(sample$case_number))
#personid<-person.id<-df_as_list$'1'$person_id[1]
api_call<-function(sample_row,request){
options(error=recover)
pb$tick()$print()
Sys.sleep(sample(seq(0.5, 2.5, 0.5), 1)) #time delay between calls
person.id<-sample_row$person_id
case.number<-sample_row$case_number
eventsdocs<-getJSON(case.number ,request)
file<-writeToSystem(eventsdocs,case.number,"eventsdocs.txt") #saves file to system using casenum and
#request type in the name
json_fromfile<-fromJSON(txt=file)
#a list df hybrid
json_df<-json_as_df(json_fromfile, request,case.number,person.id)
return(json_df)
}
safe_api_call<-safely(api_call)
wrapper<-function(sample_row,request){
options(error=recover)
res<-safe_api_call(sample_row,request)
if(is.null(res$result)){
return()
}
return(res$result)
}
eventsdocs_df<-map_dfr(df_as_list, ~wrapper(.x,"events_and_documents"))
#sample_row<-df_as_list$`2`
#testresult<-safe_api_call(sample_row,"events_and_documents")
View(eventsdocs_df)
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/broward-data-query/events_docs_data")
#so that writeToSystem writes to correct place
pb <- progress_estimated(length(sample$case_number))
dispositions_df<-map_dfr(df_as_list, ~wrapper(.x,"crim_dispositions"))
View(dispositions_df)
getJSON<-function(casenumber,request_type){
url_broward<-"https://api.browardclerk.org/api/"
key<-"Lo5Mt6EEJIwDILvpusItyvDntLsLqMwuMGzrvLFDsKzDsnypquI3JD6CLKoopLxwvnypttCKEqGnGs6sF9EKFnr21qD4MJFnvEwovDwqtp73nzCtyEGzJrsy8K4rsD9tFEGvKp8pspEyxrGw0oxtEF2HFoD1KrHGGExttDHJCF2yz1zoDuDxnpxnuwsJo8rK7H1GspGGIxxFztDLutDyqHGDrvF3sHJsyxwzLCwDJnMCnMw3CMsHvzrLEK"
url=paste0(url_broward,'case/',casenumber,'/',request_type,'.json?auth_key=',key)
#  print(url)
eventsdocs<-RETRY("GET", url,times=5)
#retries until http_error (boolean) returns false; true if status code is 400+
#retries max of 5x; 1 sec pauses between tries
return(eventsdocs) #r automatically returns last line but we'll explicitly return this here
}
View(row)
pb <- progress_estimated(length(1))
#casenum<-"09083797TI30A"
request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
row<-slice(sample,1:2)
testdf<-api_call(row ,request)
row
json_as_df<-function(json_fromfile, request,case.number,person.id){
print("entered")
if (request=="events_and_documents"){
json_df<-json_fromfile%>%
use_series(EventList)%>%  #the magrittr version of $ operator
mutate(case_num=case.number, person_id=person.id)
return(json_df)
}
#else if request=="crim_dispositions"
json_df<-json_fromfile$ChargeDispositionLists
disps<-json_df$DispositionList
listelem <- disps%>%
do.call(rbind.data.frame, .)%>%
mutate(case_num=case.number,
person_id=person.id,
OffenseDate=json_df$Offense_Date,
Charge=json_df$Charge)
return (listelem)
}
pb <- progress_estimated(length(1))
#casenum<-"09083797TI30A"
request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
row<-slice(sample,1:2)
testdf<-json_as_df()
pb <- progress_estimated(length(1))
#casenum<-"09083797TI30A"
request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
row<-slice(sample,1:2)
#testdf<-json_as_df()
#testdf<-api_call(row ,request)
pb <- progress_estimated(length(1))
#casenum<-"09083797TI30A"
request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
row<-slice(sample,1:2)
#testdf<-json_as_df()
testdf<-api_call(row ,request)
pb <- progress_estimated(length(1))
#casenum<-"09083797TI30A"
request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
row<-slice(sample,1:1)
#testdf<-json_as_df()
testdf<-api_call(row ,request)
row
casenum<-"09083797TI30A"
result<-getJSON(casenum,request)
result
content(result)
testdf<-api_call(row ,request)
pb <- progress_estimated(length(1))
testdf<-api_call(row ,request)
json_as_df<-function(json_fromfile, request,case.number,person.id){
print("entered")
if (request=="events_and_documents"){
json_df<-json_fromfile%>%
use_series(EventList)%>%  #the magrittr version of $ operator
mutate(case_num=case.number, person_id=person.id)
return(json_df)
}
#else if request=="crim_dispositions"
print("crim dispositions")
json_df<-json_fromfile$ChargeDispositionLists
disps<-json_df$DispositionList
View(disps)
listelem <- disps%>%
do.call(rbind.data.frame, .)%>%
mutate(case_num=case.number,
person_id=person.id,
OffenseDate=json_df$Offense_Date,
Charge=json_df$Charge)
return (listelem)
}
testdf<-api_call(row ,request)
pb <- progress_estimated(length(1))
# casenum<-"09083797TI30A"
# request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
#row<-slice(sample,1:1)
#testdf<-json_as_df()
testdf<-api_call(row ,request)
#result<-getJSON(casenum,request)
json_string
personid<-1
result<-json_as_df(json_string, request,casenum,personid)
json_as_df<-function(json_fromfile, request,case.number,person.id){
print("entered")
if (request=="events_and_documents"){
json_df<-json_fromfile%>%
use_series(EventList)%>%  #the magrittr version of $ operator
mutate(case_num=case.number, person_id=person.id)
return(json_df)
}
#else if request=="crim_dispositions"
print("crim dispositions")
json_df<-json_fromfile$ChargeDispositionLists
View(json_df)
disps<-json_df$DispositionList
#View(disps)
listelem <- disps%>%
do.call(rbind.data.frame, .)%>%
mutate(case_num=case.number,
person_id=person.id,
OffenseDate=json_df$Offense_Date,
Charge=json_df$Charge)
return (listelem)
}
pb <- progress_estimated(length(1))
# casenum<-"09083797TI30A"
#personid<-1
# request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
#row<-slice(sample,1:1)
#testdf<-json_as_df()
#testdf<-api_call(row ,request)
result<-json_as_df(json_string, request,casenum,personid)
json_string
json_string$ChargeDispositionList
json_as_df<-function(json_fromfile, request,case.number,person.id){
print("entered")
if (request=="events_and_documents"){
json_df<-json_fromfile%>%
use_series(EventList)%>%  #the magrittr version of $ operator
mutate(case_num=case.number, person_id=person.id)
return(json_df)
}
#else if request=="crim_dispositions"
print("crim dispositions")
json_df<-json_fromfile$ChargeDispositionList
#  View(json_df)
disps<-json_df$DispositionList
#View(disps)
listelem <- disps%>%
do.call(rbind.data.frame, .)%>%
mutate(case_num=case.number,
person_id=person.id,
OffenseDate=json_df$Offense_Date,
Charge=json_df$Charge)
return (listelem)
}
pb <- progress_estimated(length(1))
# casenum<-"09083797TI30A"
#personid<-1
# request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
#row<-slice(sample,1:1)
#testdf<-json_as_df()
#testdf<-api_call(row ,request)
result<-json_as_df(json_string, request,casenum,personid)
result
View(result)
pb <- progress_estimated(length(1))
# casenum<-"09083797TI30A"
#personid<-1
# request="crim_dispositions"
#disp<-getJSON(casenum,request)
#writeToSystem(eventsdocs,casenum,"eventsdocs.txt")
#row<-slice(sample,1:1)
testdf<-api_call(row ,request)
#result<-json_as_df(json_string, request,casenum,personid)
View(testdf)
json_as_df<-function(json_fromfile, request,case.number,person.id){
# print("entered")
if (request=="events_and_documents"){
json_df<-json_fromfile%>%
use_series(EventList)%>%  #the magrittr version of $ operator
mutate(case_num=case.number, person_id=person.id)
return(json_df)
}
#else if request=="crim_dispositions"
# print("crim dispositions")
json_df<-json_fromfile$ChargeDispositionList
#  View(json_df)
disps<-json_df$DispositionList
#View(disps)
listelem <- disps%>%
do.call(rbind.data.frame, .)%>%
mutate(case_num=case.number,
person_id=person.id,
OffenseDate=json_df$Offense_Date,
Charge=json_df$Charge)
return (listelem)
}
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/broward-data-query/disps_data")
#so that writeToSystem writes to correct place
pb <- progress_estimated(length(sample$case_number))
dispositions_df<-map_dfr(df_as_list, ~wrapper(.x,"crim_dispositions"))
View(dispositions_df)
request
request+".txt"
paste(request, ".txt",sep="")
paste(request,".txt")
api_call<-function(sample_row,request){
options(error=recover)
pb$tick()$print()
Sys.sleep(sample(seq(0.5, 2.5, 0.5), 1)) #time delay between calls
person.id<-sample_row$person_id
case.number<-sample_row$case_number
eventsdocs<-getJSON(case.number ,request)
file<-writeToSystem(eventsdocs,case.number,paste(request,".txt",sep="")) #saves file to system using casenum and
#request type in the name
json_fromfile<-fromJSON(txt=file)
#a list df hybrid
json_df<-json_as_df(json_fromfile, request,case.number,person.id)
return(json_df)
}
safe_api_call<-safely(api_call)
wrapper<-function(sample_row,request){
options(error=recover)
res<-safe_api_call(sample_row,request)
if(is.null(res$result)){
return()
}
return(res$result)
}
loopdf<-read.csv(file="loopdf.csv")
loopdf<-select(loopdf, person_id, case_number)
sample<-slice(loopdf,1:10)
sample$case_number<-as.character(sample$case_number)
sample$person_id<-as.numeric(sample$person_id)
df_as_list<-sample%>%
split(seq(nrow(.)))%>%
lapply(as.vector)
setwd("C:/Users/Caroline Wang/OneDrive/Duke/Criminal Recidivism/broward-data-query/disps_data")
#so that writeToSystem writes to correct place
pb <- progress_estimated(length(sample$case_number))
dispositions_df<-map_dfr(df_as_list, ~wrapper(.x,"crim_dispositions"))
getJSON<-function(casenumber,request_type){
url_broward<-"https://api.browardclerk.org/api/"
key<-"Lo5Mt6EEJIwDILvpusItyvDntLsLqMwuMGzrvLFDsKzDsnypquI3JD6CLKoopLxwvnypttCKEqGnGs6sF9EKFnr21qD4MJFnvEwovDwqtp73nzCtyEGzJrsy8K4rsD9tFEGvKp8pspEyxrGw0oxtEF2HFoD1KrHGGExttDHJCF2yz1zoDuDxnpxnuwsJo8rK7H1GspGGIxxFztDLutDyqHGDrvF3sHJsyxwzLCwDJnMCnMw3CMsHvzrLEK"
url=paste0(url_broward,'case/',casenumber,'/',request_type,'.json?auth_key=',key)
#  print(url)
eventsdocs<-RETRY("GET", url,times=5)
#retries until http_error (boolean) returns false; true if status code is 400+
#retries max of 5x; 1 sec pauses between tries
return(eventsdocs) #r automatically returns last line but we'll explicitly return this here
}
View(dispositions_df)
library("xml2", lib.loc="~/R/win-library/3.4")
install.packages("xml2")
library(xml2)
get_data<-function(casenumber,request_type, data_type){
url_broward<-"https://api.browardclerk.org/api/"
key<-"Lo5Mt6EEJIwDILvpusItyvDntLsLqMwuMGzrvLFDsKzDsnypquI3JD6CLKoopLxwvnypttCKEqGnGs6sF9EKFnr21qD4MJFnvEwovDwqtp73nzCtyEGzJrsy8K4rsD9tFEGvKp8pspEyxrGw0oxtEF2HFoD1KrHGGExttDHJCF2yz1zoDuDxnpxnuwsJo8rK7H1GspGGIxxFztDLutDyqHGDrvF3sHJsyxwzLCwDJnMCnMw3CMsHvzrLEK"
url=paste0(url_broward,'case/',casenumber,'/',request_type,'.',data_type,'?auth_key=',key)
#  print(url)
eventsdocs<-RETRY("GET", url,times=5)
#retries until http_error (boolean) returns false; true if status code is 400+
#retries max of 5x; 1 sec pauses between tries
return(eventsdocs) #r automatically returns last line but we'll explicitly return this here
}
writeToSystem<-function(web_response,casenumber, filetype,data_type){
filename=paste(casenumber,filetype,data_type, sep="")
raw<-content(web_response,"raw")
writeBin(raw,filename)
return(filename)
}
data_as_df<-function(data_fromfile, request,case.number,person.id){
# print("entered")
if (request=="events_and_documents"){
json_df<-data_fromfile%>%
use_series(EventList)%>%  #the magrittr version of $ operator
mutate(case_num=case.number, person_id=person.id)
return(json_df)
}
#else if request=="crim_dispositions"
# print("crim dispositions")
json_df<-data_fromfile$ChargeDispositionList
#  View(json_df)
disps<-json_df$DispositionList
#View(disps)
listelem <- disps%>%
do.call(rbind.data.frame, .)%>%
mutate(case_num=case.number,
person_id=person.id,
OffenseDate=json_df$Offense_Date,
Charge=json_df$Charge)
return (listelem)
}
casenum
request
#casenum="09083797TI30A"
#request=crim_dispositions
disp<-get_data(casenum, request,"xml" )
# Load packages
library(tidyverse)
library(httr)
library(jsonlite)
library(xml2)
library(magrittr)
#casenum="09083797TI30A"
#request=crim_dispositions
disp<-get_data(casenum, request,"xml" )
filename=writeToSystem(disp,casenum,request,"xml")
xml_string=read_xml(filename)
xml_string
class(xml_string)
xml_children(xml_string)
xml_text(xml_string)
json_string
as_list(xml_string)
xml_ns(xml_string)
xml_serialize(xml_string)
class(xml_string)
xml_children(xml_string)
